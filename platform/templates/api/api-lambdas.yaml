AWSTemplateFormatVersion: '2010-09-09'
Description: API Lambda function resource stack creation

Parameters:
  AppBucket:
    Type: String
  AppName:
    Type: String
  ApiName:
    Type: String
  Build:
    Type: String
  FunctionName: 
    Type: String
  Description: 
    Type: String
  Env: 
    Type: String
  Handler: 
    Type: String
  MemorySize:
    Type: Number
    Default: 128
  Runtime:
    Type: String
    Default: python3.6
  Timeout:
    Type: Number
    Default: 3
  DefaultAPIRoleName:
    Type: String
  UserpoolId:
    Type: String
  AppClientId:
    Type: String


Resources:

  lambda:
    Type: AWS::Lambda::Function
    Properties: 
      Code: 
        S3Bucket: !Ref AppBucket
        S3Key: !Sub "lambda/api/${Env}/${Build}/${FunctionName}.zip"
      Description: !Ref Description
      FunctionName: !Sub "${AppName}-${FunctionName}-${Env}"
      Handler: !Ref Handler
      MemorySize: !Ref MemorySize
      Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/${DefaultAPIRoleName}-${Env}"
      Runtime: !Ref Runtime
      Timeout: !Ref Timeout
      Environment:
        Variables:
          APPLICATION_NAME: !Ref AppName
          BRANCH: !Ref Env
          REGION_NAME: !Ref AWS::Region
          COGNITO_BYPASS: "False"
          USERPOOL_ID: !Ref UserpoolId
          APP_CLIENT_ID: !Ref AppClientId

  permissions:
    DependsOn: lambda
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub "${AppName}-${FunctionName}-${Env}"
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiName}/*/*/*"
    


Outputs:
  lambda: 
    Description: Lambda function
    Value: !Ref lambda
